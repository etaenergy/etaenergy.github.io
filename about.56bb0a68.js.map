{"mappings":"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","sources":["<anon>","about.js"],"sourcesContent":["// The place I saw this effect:\n// https://angle2.agency/\n// Red Staper made a NICE tutorial about this effect! You should check it out!\n// https://www.youtube.com/watch?v=LgiadQQM6mo&t=5s\n// window.addEventListener('mousemove', handleMouseMove);\n// window.addEventListener('resize', handleWindowResize);\n// const spansSlow = document.querySelectorAll('.spanSlow');\n// const spansFast = document.querySelectorAll('.spanFast');\n// let width = window.innerWidth;\n// function handleMouseMove(e) {\n//   let normalizedPosition = e.pageX / (width / 2) - 1;\n//   let speedSlow = 100 * normalizedPosition;\n//   let speedFast = 200 * normalizedPosition;\n//   spansSlow.forEach((span) => {\n//     span.style.transform = `translate(${speedSlow}px)`;\n//   });\n//   spansFast.forEach((span) => {\n//     span.style.transform = `translate(${speedFast}px)`\n//   })\n// }\n// //we need to recalculate width when the window is resized\n// function handleWindowResize() {\n//   width = window.innerWidth;\n// }\n// // // Select the elements\n// const images = document.querySelectorAll('.imgshow');\n// // Set up the GSAP animations\n// const timeline = gsap.timeline({ repeat: -1 });\n// timeline.from(images[0], { duration: 2, opacity: 0 })\n//         .to(images[0], { duration: 2, opacity: 0 })\n//         .from(images[1], { duration: 2, opacity: 0 })\n//         .to(images[1], { duration: 2, opacity: 0 });\n// // Start the animation\n// timeline.play();\nvar tmlabt = gsap.timeline({\n    defaults: {\n        duration: 1\n    }\n});\ntmlabt.to(\"body\", {\n    opacity: 1,\n    ease: \"Power1.easeInOut\",\n    delay: 0.5\n}).to(\".nav_component\", {\n    opacity: 1,\n    y: 0,\n    stagger: 0.1,\n    ease: \"Power1.easeInOut\"\n}, \"-=.6\").fromTo(\".about-header-title\", {\n    scale: 0,\n    opacity: 0\n}, {\n    opacity: 1,\n    scale: 1,\n    y: 0,\n    ease: \"Power1.easeInOut\"\n}, \"-=0.3\");\n// .to(\".header_wrapper\", { opacity: 1, ease: \"Power1.easeInOut\", x: 0 }, \"-=0.8\")\n// .to(\".header_lottie-component\", { opacity: 1, y:300, scale:2, ease: \"Power1.easeInOut\" },)\n// .to(\".section-video-hero, .fab\", { opacity: 1, p: 0, ease: \"Power1.easeInOut\" }, \"-=0.8\")\n// .to(\".nav_component, .videoo\", { opacity: 1, p: 0, stagger: 0.1, ease: \"Power1.easeInOut\" }, \"-=0.6\")\n// .to(\".home-hero-title\", { opacity: 1, ease: \"Power1.easeInOut\", margin: 0 }, \"-=0.8\")\n// .to(\".sup\", { \"clip-path\": \"polygon(100% 0%, 0% 0%, 0% 125%, 100% 100%)\",\n// x: 0,\n// duration: 1.8,})\nfunction updateLogoColor(bgColor) {\n    const logo = document.getElementById(\"logoSVG\");\n    // Convert HEX color to RGB\n    const rgb = hexToRgb(bgColor);\n    if (!rgb) return; // Exit if hexToRgb returned null\n    const brightness = rgb.r * 0.299 + rgb.g * 0.587 + rgb.b * 0.114; // Calculate brightness\n    // Adjust logo color based on background brightness\n    const logoColor = brightness > 128 ? \"#000000\" : \"#ec2227\"; // Light BG → Black Logo, Dark BG → White Logo\n    logo.querySelectorAll(\"polygon, path\").forEach((el)=>el.setAttribute(\"fill\", logoColor));\n}\nfunction hexToRgb(hex) {\n    if (typeof hex !== 'string') return null;\n    hex = hex.replace('#', '');\n    if (hex.length === 3) hex = hex.split('').map(function(char) {\n        return char + char;\n    }).join('');\n    const rgb = /^([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i.exec(hex);\n    return rgb ? {\n        r: parseInt(rgb[1], 16),\n        g: parseInt(rgb[2], 16),\n        b: parseInt(rgb[3], 16)\n    } : null;\n}\n// Detect when the logo moves into a new section\nconst observer = new IntersectionObserver((entries)=>{\n    entries.forEach((entry)=>{\n        if (entry.isIntersecting) {\n            const bgColor = window.getComputedStyle(entry.target).backgroundColor;\n            updateLogoColor(rgbToHex(bgColor)); // Convert RGB to HEX and update logo color\n        }\n    });\n}, {\n    threshold: 0.5\n});\n// Observe sections\ndocument.querySelectorAll('.section').forEach((section)=>observer.observe(section));\n// Function to convert RGB to HEX\nfunction rgbToHex(rgb) {\n    let [r, g, b] = rgb.match(/\\d+/g);\n    return `#${(16777216 | r << 16 | g << 8 | +b).toString(16).slice(1)}`;\n}\n// Initialize the logo color based on the first section\nconst firstSectionBgColor = \"#FF3535\"; // Initial background color\nupdateLogoColor(firstSectionBgColor);\n// Update logo color on scroll by checking the current section's background color\nwindow.addEventListener(\"scroll\", function() {\n    const sections = document.querySelectorAll('.section');\n    let bgColor = firstSectionBgColor; // Default to the first section's color\n    sections.forEach((section)=>{\n        const rect = section.getBoundingClientRect();\n        if (rect.top <= 0 && rect.bottom >= 0) bgColor = window.getComputedStyle(section).backgroundColor;\n    });\n    updateLogoColor(rgbToHex(bgColor));\n});\n// Initial check on page load\nwindow.addEventListener(\"load\", function() {\n    updateLogoColor(firstSectionBgColor);\n});\n// Re-check logo color on mobile device resize\nwindow.addEventListener(\"resize\", function() {\n    const sections = document.querySelectorAll('.section');\n    let bgColor = firstSectionBgColor; // Default to the first section's color\n    sections.forEach((section)=>{\n        const rect = section.getBoundingClientRect();\n        if (rect.top <= 0 && rect.bottom >= 0) bgColor = window.getComputedStyle(section).backgroundColor;\n    });\n    updateLogoColor(rgbToHex(bgColor));\n});\n// Update logo color on mobile touch event\nwindow.addEventListener(\"touchmove\", function() {\n    const sections = document.querySelectorAll('.section');\n    let bgColor = firstSectionBgColor; // Default to the first section's color\n    sections.forEach((section)=>{\n        const rect = section.getBoundingClientRect();\n        if (rect.top <= 0 && rect.bottom >= 0) bgColor = window.getComputedStyle(section).backgroundColor;\n    });\n    updateLogoColor(rgbToHex(bgColor));\n}); // let laptl = gsap.timeline({ defaults: { duration: 1 } })\n // laptl.to(\".course-wyn_animation-text-left\", { x: 0, ease: \"Power1.easeInOut\", }, \"-=0.10\")\n //     .to(\".course-wyn_animation-text-right\", { x: 0, ease: \"Power1.easeInOut\", }, \"-=0.9\")\n //     .to(\".course-wyn_midi-image\", { opacity: 1, ease: \"Power1.easeInOut\", }, \"-=0.9\")\n // // .fromTo(\".course-wyn_midi-title-mobile\", { opacity:0,y:50, }, { opacity:1,y:0, ease: \"Power1.easeInOut\", }, \"-=0.9\")\n // ScrollTrigger.create({\n //     trigger: '.course-wyn_animation-text-left',\n //     start: \"bottom 80%\",\n //     end: \"+=500\",\n //     animation: laptl,\n //     scrub: true, //enterback\n //     // events: onEnter onLeave onEnterBack onLeaveBack\n //     // toggleActions: \"restart play reverse reset\"\n // });\n\n//# sourceMappingURL=about.56bb0a68.js.map\n","// The place I saw this effect:\r\n// https://angle2.agency/\r\n\r\n// Red Staper made a NICE tutorial about this effect! You should check it out!\r\n// https://www.youtube.com/watch?v=LgiadQQM6mo&t=5s\r\n\r\n// window.addEventListener('mousemove', handleMouseMove);\r\n// window.addEventListener('resize', handleWindowResize);\r\n\r\n// const spansSlow = document.querySelectorAll('.spanSlow');\r\n// const spansFast = document.querySelectorAll('.spanFast');\r\n\r\n// let width = window.innerWidth;\r\n\r\n// function handleMouseMove(e) {\r\n//   let normalizedPosition = e.pageX / (width / 2) - 1;\r\n//   let speedSlow = 100 * normalizedPosition;\r\n//   let speedFast = 200 * normalizedPosition;\r\n//   spansSlow.forEach((span) => {\r\n//     span.style.transform = `translate(${speedSlow}px)`;\r\n//   });\r\n//   spansFast.forEach((span) => {\r\n//     span.style.transform = `translate(${speedFast}px)`\r\n//   })\r\n// }\r\n// //we need to recalculate width when the window is resized\r\n// function handleWindowResize() {\r\n//   width = window.innerWidth;\r\n// }\r\n\r\n\r\n\r\n// // // Select the elements\r\n// const images = document.querySelectorAll('.imgshow');\r\n\r\n// // Set up the GSAP animations\r\n// const timeline = gsap.timeline({ repeat: -1 });\r\n// timeline.from(images[0], { duration: 2, opacity: 0 })\r\n//         .to(images[0], { duration: 2, opacity: 0 })\r\n//         .from(images[1], { duration: 2, opacity: 0 })\r\n//         .to(images[1], { duration: 2, opacity: 0 });\r\n\r\n// // Start the animation\r\n// timeline.play();\r\n\r\n\r\nvar tmlabt = gsap.timeline({ defaults: { duration: 1 } })\r\ntmlabt.to(\"body\", { opacity: 1, ease: \"Power1.easeInOut\", delay: 0.5 },)\r\n    .to(\".nav_component\", { opacity: 1, y: 0, stagger: 0.1, ease: \"Power1.easeInOut\" }, \"-=.6\")\r\n    .fromTo(\".about-header-title\", { scale: 0, opacity:0 }, { opacity:1,\r\n       scale:1, y:0, ease: \"Power1.easeInOut\" }, \"-=0.3\")\r\n    // .to(\".header_wrapper\", { opacity: 1, ease: \"Power1.easeInOut\", x: 0 }, \"-=0.8\")\r\n    // .to(\".header_lottie-component\", { opacity: 1, y:300, scale:2, ease: \"Power1.easeInOut\" },)\r\n\r\n    // .to(\".section-video-hero, .fab\", { opacity: 1, p: 0, ease: \"Power1.easeInOut\" }, \"-=0.8\")\r\n    // .to(\".nav_component, .videoo\", { opacity: 1, p: 0, stagger: 0.1, ease: \"Power1.easeInOut\" }, \"-=0.6\")\r\n    // .to(\".home-hero-title\", { opacity: 1, ease: \"Power1.easeInOut\", margin: 0 }, \"-=0.8\")\r\n\r\n// .to(\".sup\", { \"clip-path\": \"polygon(100% 0%, 0% 0%, 0% 125%, 100% 100%)\",\r\n// x: 0,\r\n// duration: 1.8,})\r\n\r\n\r\n    function updateLogoColor(bgColor) {\r\n        const logo = document.getElementById(\"logoSVG\");\r\n\r\n        // Convert HEX color to RGB\r\n        const rgb = hexToRgb(bgColor);\r\n        if (!rgb) return; // Exit if hexToRgb returned null\r\n\r\n        const brightness = (rgb.r * 0.299 + rgb.g * 0.587 + rgb.b * 0.114); // Calculate brightness\r\n\r\n        // Adjust logo color based on background brightness\r\n        const logoColor = brightness > 128 ? \"#000000\" : \"#ec2227\"; // Light BG → Black Logo, Dark BG → White Logo\r\n\r\n        logo.querySelectorAll(\"polygon, path\").forEach(el => el.setAttribute(\"fill\", logoColor));\r\n    }\r\n\r\n    function hexToRgb(hex) {\r\n        if (typeof hex !== 'string') return null;\r\n\r\n        hex = hex.replace('#', '');\r\n        if (hex.length === 3) {\r\n            hex = hex.split('').map(function (char) {\r\n                return char + char;\r\n            }).join('');\r\n        }\r\n\r\n        const rgb = /^([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i.exec(hex);\r\n        return rgb ? {\r\n            r: parseInt(rgb[1], 16),\r\n            g: parseInt(rgb[2], 16),\r\n            b: parseInt(rgb[3], 16)\r\n        } : null;\r\n    }\r\n\r\n    // Detect when the logo moves into a new section\r\n    const observer = new IntersectionObserver((entries) => {\r\n        entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n                const bgColor = window.getComputedStyle(entry.target).backgroundColor;\r\n                updateLogoColor(rgbToHex(bgColor)); // Convert RGB to HEX and update logo color\r\n            }\r\n        });\r\n    }, { threshold: 0.5 });\r\n\r\n    // Observe sections\r\n    document.querySelectorAll('.section').forEach(section => observer.observe(section));\r\n\r\n    // Function to convert RGB to HEX\r\n    function rgbToHex(rgb) {\r\n        let [r, g, b] = rgb.match(/\\d+/g);\r\n        return `#${((1 << 24) | (r << 16) | (g << 8) | +b).toString(16).slice(1)}`;\r\n    }\r\n\r\n    // Initialize the logo color based on the first section\r\n    const firstSectionBgColor = \"#FF3535\"; // Initial background color\r\n    updateLogoColor(firstSectionBgColor);\r\n\r\n    // Update logo color on scroll by checking the current section's background color\r\n    window.addEventListener(\"scroll\", function() {\r\n        const sections = document.querySelectorAll('.section');\r\n        let bgColor = firstSectionBgColor; // Default to the first section's color\r\n\r\n        sections.forEach(section => {\r\n            const rect = section.getBoundingClientRect();\r\n            if (rect.top <= 0 && rect.bottom >= 0) {\r\n                bgColor = window.getComputedStyle(section).backgroundColor;\r\n            }\r\n        });\r\n\r\n        updateLogoColor(rgbToHex(bgColor));\r\n    });\r\n\r\n    // Initial check on page load\r\n    window.addEventListener(\"load\", function() {\r\n        updateLogoColor(firstSectionBgColor);\r\n    });\r\n\r\n    // Re-check logo color on mobile device resize\r\n    window.addEventListener(\"resize\", function() {\r\n        const sections = document.querySelectorAll('.section');\r\n        let bgColor = firstSectionBgColor; // Default to the first section's color\r\n\r\n        sections.forEach(section => {\r\n            const rect = section.getBoundingClientRect();\r\n            if (rect.top <= 0 && rect.bottom >= 0) {\r\n                bgColor = window.getComputedStyle(section).backgroundColor;\r\n            }\r\n        });\r\n\r\n        updateLogoColor(rgbToHex(bgColor));\r\n    });\r\n\r\n    // Update logo color on mobile touch event\r\n    window.addEventListener(\"touchmove\", function() {\r\n        const sections = document.querySelectorAll('.section');\r\n        let bgColor = firstSectionBgColor; // Default to the first section's color\r\n\r\n        sections.forEach(section => {\r\n            const rect = section.getBoundingClientRect();\r\n            if (rect.top <= 0 && rect.bottom >= 0) {\r\n                bgColor = window.getComputedStyle(section).backgroundColor;\r\n            }\r\n        });\r\n\r\n        updateLogoColor(rgbToHex(bgColor));\r\n    });\r\n\r\n// let laptl = gsap.timeline({ defaults: { duration: 1 } })\r\n\r\n// laptl.to(\".course-wyn_animation-text-left\", { x: 0, ease: \"Power1.easeInOut\", }, \"-=0.10\")\r\n//     .to(\".course-wyn_animation-text-right\", { x: 0, ease: \"Power1.easeInOut\", }, \"-=0.9\")\r\n//     .to(\".course-wyn_midi-image\", { opacity: 1, ease: \"Power1.easeInOut\", }, \"-=0.9\")\r\n// // .fromTo(\".course-wyn_midi-title-mobile\", { opacity:0,y:50, }, { opacity:1,y:0, ease: \"Power1.easeInOut\", }, \"-=0.9\")\r\n\r\n// ScrollTrigger.create({\r\n//     trigger: '.course-wyn_animation-text-left',\r\n//     start: \"bottom 80%\",\r\n//     end: \"+=500\",\r\n//     animation: laptl,\r\n//     scrub: true, //enterback\r\n//     // events: onEnter onLeave onEnterBack onLeaveBack\r\n//     // toggleActions: \"restart play reverse reset\"\r\n// });"],"names":["updateLogoColor","bgColor","logo","document","getElementById","rgb","hexToRgb","hex","replace","length","split","map","char","join","exec","r","parseInt","g","b","logoColor","brightness","querySelectorAll","forEach","el","setAttribute","tmlabt","gsap","timeline","defaults","duration","to","opacity","ease","delay","y","stagger","fromTo","scale","observer","IntersectionObserver","entries","entry","isIntersecting","rgbToHex","window","getComputedStyle","target","backgroundColor","threshold","match","toString","slice","section","observe","firstSectionBgColor","addEventListener","sections","rect","getBoundingClientRect","top","bottom"],"version":3,"file":"about.56bb0a68.js.map"}