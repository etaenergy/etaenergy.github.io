{"mappings":"ACCA,MAAM,EAAS,SAAS,aAAa,CAAC,kBAChC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAQ,SAAS,gBAAgB,CAAC,aACxC,IAAI,EAAiB,CAAA,EAEjB,EAAU,EAAG,EAAU,EACvB,EAAW,EAAG,EAAW,EAI7B,MAAM,EAAa,KACjB,EAAO,SAAS,CAAC,GAAG,CAAC,uBACrB,EAAiB,CAAA,CACnB,EAmBA,EAAM,OAAO,CAAC,AAAC,IACb,EAAK,gBAAgB,CAAC,YAAa,KACjC,aAAa,EAAO,YAAY,EAChC,EAAO,SAAS,CAAC,MAAM,CAAC,sBACxB,EAAO,SAAS,CAAC,GAAG,CAAC,sBACvB,GAEA,EAAK,gBAAgB,CAAC,WAAY,KAEhC,EAAO,SAAS,CAAC,MAAM,CAAC,uBACxB,EAAO,SAAS,CAAC,GAAG,CAAC,sBAGrB,EAAO,YAAY,CAAG,WAAW,KAC/B,EAAO,SAAS,CAAC,MAAM,CAAC,qBAC1B,EAAG,IACL,EACF,GAIA,MAAM,EAAuB,KAE3B,GAAY,AAAC,CAAA,EAAU,CAAA,EAhDL,IAiDlB,GAAY,AAAC,CAAA,EAAU,CAAA,EAjDL,IAoDlB,EAAO,KAAK,CAAC,IAAI,CAAG,CAAA,EAAG,EAAS,EAAE,CAAC,CACnC,EAAO,KAAK,CAAC,GAAG,CAAG,CAAA,EAAG,EAAS,EAAE,CAAC,CAGlC,EAAU,KAAK,CAAC,IAAI,CAAG,CAAA,EAAG,EAAQ,EAAE,CAAC,CACrC,EAAU,KAAK,CAAC,GAAG,CAAG,CAAA,EAAG,EAAQ,EAAE,CAAC,CAGpC,sBAAsB,EACxB,EAGA,SAAS,gBAAgB,CAAC,YAAa,AAAC,IACtC,EAAU,EAAE,OAAO,CACnB,EAAU,EAAE,OAAO,CAGd,GACH,GAEJ,GAGA,SAAS,gBAAgB,CAAC,WAlEJ,KACpB,EAAO,SAAS,CAAC,MAAM,CAAC,uBACxB,EAAiB,CAAA,CACnB,GAkEA,IA+BA,MAAM,EAAY,SAAS,aAAa,CAAC,+BACnC,EAAgB,SAAS,aAAa,CAAC,SAK7C,IAAI,EAAe,EACf,EAAe,EACf,EAAS,EACT,EAAS,EACT,EAAc,CAAA,EAElB,SAAS,gBAAgB,CAAC,YAAa,AAAC,IACtC,IAAM,EAAO,EAAc,qBAAqB,GAChD,CAAA,EACE,EAAE,OAAO,EAAI,EAAK,IAAI,EACtB,EAAE,OAAO,EAAI,EAAK,KAAK,EACvB,EAAE,OAAO,EAAI,EAAK,GAAG,EACrB,EAAE,OAAO,EAAI,EAAK,MAAM,AAAN,IAIlB,EAAS,EAAE,OAAO,CAAG,EAAK,IAAI,CAC9B,EAAS,EAAE,OAAO,CAAG,EAAK,GAAG,CAEjC,IAsCA,AAnCA,SAAS,IACP,GAAK,GAEL,GAAI,EAAa,CACf,IAAM,EAAO,EAAc,qBAAqB,GAC1C,EAAU,EAAK,KAAK,CAAG,EACvB,EAAU,EAAK,MAAM,CAAG,EAExB,EAAU,EAAS,EACnB,EAAU,EAAS,EAQzB,GAAgB,AAAC,CAAA,AALA,EAAU,EArCD,GA0CK,CAAA,EAzCjB,GA0Cd,GAAgB,AAAC,CAAA,AAJG,CAAA,CAAA,AAHH,EAAU,EAGP,EAApB,EAI+B,CAAA,EA1CjB,EA2ChB,MAEE,GAAgB,AAAC,CAAA,EAAI,CAAA,EA7CP,GA8Cd,GAAgB,AAAC,CAAA,EAAI,CAAA,EA9CP,GAiDhB,KAAK,GAAG,CAAC,EAAW,CAClB,UAAW,EACX,UAAW,EACX,qBAAsB,IACtB,gBAAiB,eACnB,GAEA,sBAAsB,GACxB","sources":["<anon>","cursor1.js"],"sourcesContent":["var $df8da4b5726af936$exports = {};\n// WORKING CODE\nconst $df8da4b5726af936$var$cursor = document.querySelector(\".custom-cursor\");\nconst $df8da4b5726af936$var$cursorDot = document.querySelector(\".cursor-dot\");\nconst $df8da4b5726af936$var$links = document.querySelectorAll(\"a, button\");\nlet $df8da4b5726af936$var$isCursorInited = false;\nlet $df8da4b5726af936$var$targetX = 0, $df8da4b5726af936$var$targetY = 0; // Target position of the cursor\nlet $df8da4b5726af936$var$currentX = 0, $df8da4b5726af936$var$currentY = 0; // Current position of the cursor\nconst $df8da4b5726af936$var$cursorSpeed = 0.05; // Control the lag speed (smaller is more laggy)\n// Initialize the cursor\nconst $df8da4b5726af936$var$initCursor = ()=>{\n    $df8da4b5726af936$var$cursor.classList.add(\"custom-cursor--init\");\n    $df8da4b5726af936$var$isCursorInited = true;\n};\n// Destroy the cursor on mouse out\nconst $df8da4b5726af936$var$destroyCursor = ()=>{\n    $df8da4b5726af936$var$cursor.classList.remove(\"custom-cursor--init\");\n    $df8da4b5726af936$var$isCursorInited = false;\n};\n// Detect hover over elements and change cursor state\n// links.forEach((link) => {\n//   link.addEventListener(\"mouseover\", () => {\n//     cursor.classList.add(\"custom-cursor--link\");\n//   });\n//   link.addEventListener(\"mouseout\", () => {\n//     cursor.classList.remove(\"custom-cursor--link\");\n//   });\n// });\n$df8da4b5726af936$var$links.forEach((link)=>{\n    link.addEventListener(\"mouseover\", ()=>{\n        clearTimeout($df8da4b5726af936$var$cursor.leaveTimeout);\n        $df8da4b5726af936$var$cursor.classList.remove(\"custom-cursor--out\");\n        $df8da4b5726af936$var$cursor.classList.add(\"custom-cursor--link\");\n    });\n    link.addEventListener(\"mouseout\", ()=>{\n        // First: trigger the \"out\" animation\n        $df8da4b5726af936$var$cursor.classList.remove(\"custom-cursor--link\");\n        $df8da4b5726af936$var$cursor.classList.add(\"custom-cursor--out\");\n        // Optional: Remove .custom-cursor--out after animation completes\n        $df8da4b5726af936$var$cursor.leaveTimeout = setTimeout(()=>{\n            $df8da4b5726af936$var$cursor.classList.remove(\"custom-cursor--out\");\n        }, 300); // match the transition time\n    });\n});\n// Update cursor position smoothly with lag effect\nconst $df8da4b5726af936$var$updateCursorPosition = ()=>{\n    // Interpolate current position towards target position (for laggy effect)\n    $df8da4b5726af936$var$currentX += ($df8da4b5726af936$var$targetX - $df8da4b5726af936$var$currentX) * $df8da4b5726af936$var$cursorSpeed;\n    $df8da4b5726af936$var$currentY += ($df8da4b5726af936$var$targetY - $df8da4b5726af936$var$currentY) * $df8da4b5726af936$var$cursorSpeed;\n    // Update the large cursor position\n    $df8da4b5726af936$var$cursor.style.left = `${$df8da4b5726af936$var$currentX}px`;\n    $df8da4b5726af936$var$cursor.style.top = `${$df8da4b5726af936$var$currentY}px`;\n    // Update the small dot position\n    $df8da4b5726af936$var$cursorDot.style.left = `${$df8da4b5726af936$var$targetX}px`;\n    $df8da4b5726af936$var$cursorDot.style.top = `${$df8da4b5726af936$var$targetY}px`;\n    // Repeat this animation frame\n    requestAnimationFrame($df8da4b5726af936$var$updateCursorPosition);\n};\n// Mouse move event to update target position\ndocument.addEventListener(\"mousemove\", (e)=>{\n    $df8da4b5726af936$var$targetX = e.clientX;\n    $df8da4b5726af936$var$targetY = e.clientY;\n    // Initialize cursor if not yet initialized\n    if (!$df8da4b5726af936$var$isCursorInited) $df8da4b5726af936$var$initCursor();\n});\n// Destroy cursor on mouse out\ndocument.addEventListener(\"mouseout\", $df8da4b5726af936$var$destroyCursor);\n// Start the laggy cursor movement\n$df8da4b5726af936$var$updateCursorPosition();\n// const lottieDiv = document.querySelector(\".home-header_lottie-desktop\");\n// const parallaxSpeed = 0.02; // Adjust for more/less movement\n// const updateParallax = () => {\n//   if (!lottieDiv) return;\n//   const centerX = window.innerWidth / 2;\n//   const centerY = window.innerHeight / 2;\n//   const moveX = (targetX - centerX) * parallaxSpeed;\n//   const moveY = (targetY - centerY) * parallaxSpeed;\n//   gsap.to(lottieDiv, {\n//     x: moveX,\n//     y: moveY,\n//     duration: 0.6,\n//     ease: \"power3.out\",\n//   });\n//   requestAnimationFrame(updateParallax);\n// };\n// updateParallax();\n// // test\nconst $df8da4b5726af936$var$lottieDiv = document.querySelector(\".home-header_lottie-desktop\");\nconst $df8da4b5726af936$var$lottieSection = document.querySelector(\".lott\"); // wrap the Lottie in a section or container\nconst $df8da4b5726af936$var$parallaxTiltIntensity = 10;\nconst $df8da4b5726af936$var$lerpSpeed = 0.1;\nlet $df8da4b5726af936$var$currentTiltX = 0;\nlet $df8da4b5726af936$var$currentTiltY = 0;\nlet $df8da4b5726af936$var$localX = 0;\nlet $df8da4b5726af936$var$localY = 0;\nlet $df8da4b5726af936$var$isInSection = false;\ndocument.addEventListener(\"mousemove\", (e)=>{\n    const rect = $df8da4b5726af936$var$lottieSection.getBoundingClientRect();\n    $df8da4b5726af936$var$isInSection = e.clientX >= rect.left && e.clientX <= rect.right && e.clientY >= rect.top && e.clientY <= rect.bottom;\n    if ($df8da4b5726af936$var$isInSection) {\n        $df8da4b5726af936$var$localX = e.clientX - rect.left;\n        $df8da4b5726af936$var$localY = e.clientY - rect.top;\n    }\n});\nfunction $df8da4b5726af936$var$updateLottie3DTilt() {\n    if (!$df8da4b5726af936$var$lottieDiv) return;\n    if ($df8da4b5726af936$var$isInSection) {\n        const rect = $df8da4b5726af936$var$lottieSection.getBoundingClientRect();\n        const centerX = rect.width / 2;\n        const centerY = rect.height / 2;\n        const offsetX = $df8da4b5726af936$var$localX - centerX;\n        const offsetY = $df8da4b5726af936$var$localY - centerY;\n        const percentX = offsetX / centerX;\n        const percentY = offsetY / centerY;\n        const targetTiltY = percentX * $df8da4b5726af936$var$parallaxTiltIntensity * -1;\n        const targetTiltX = percentY * $df8da4b5726af936$var$parallaxTiltIntensity;\n        $df8da4b5726af936$var$currentTiltX += (targetTiltX - $df8da4b5726af936$var$currentTiltX) * $df8da4b5726af936$var$lerpSpeed;\n        $df8da4b5726af936$var$currentTiltY += (targetTiltY - $df8da4b5726af936$var$currentTiltY) * $df8da4b5726af936$var$lerpSpeed;\n    } else {\n        // Slowly return to 0 rotation when mouse leaves the section\n        $df8da4b5726af936$var$currentTiltX += (0 - $df8da4b5726af936$var$currentTiltX) * $df8da4b5726af936$var$lerpSpeed;\n        $df8da4b5726af936$var$currentTiltY += (0 - $df8da4b5726af936$var$currentTiltY) * $df8da4b5726af936$var$lerpSpeed;\n    }\n    gsap.set($df8da4b5726af936$var$lottieDiv, {\n        rotationX: $df8da4b5726af936$var$currentTiltX,\n        rotationY: $df8da4b5726af936$var$currentTiltY,\n        transformPerspective: 800,\n        transformOrigin: \"center center\"\n    });\n    requestAnimationFrame($df8da4b5726af936$var$updateLottie3DTilt);\n}\n$df8da4b5726af936$var$updateLottie3DTilt();\n\n\n//# sourceMappingURL=index.a691f1ed.js.map\n","// WORKING CODE\r\nconst cursor = document.querySelector(\".custom-cursor\");\r\nconst cursorDot = document.querySelector(\".cursor-dot\");\r\nconst links = document.querySelectorAll(\"a, button\");\r\nlet isCursorInited = false;\r\n\r\nlet targetX = 0, targetY = 0;  // Target position of the cursor\r\nlet currentX = 0, currentY = 0;  // Current position of the cursor\r\nconst cursorSpeed = 0.05; // Control the lag speed (smaller is more laggy)\r\n\r\n// Initialize the cursor\r\nconst initCursor = () => {\r\n  cursor.classList.add(\"custom-cursor--init\");\r\n  isCursorInited = true;\r\n};\r\n\r\n// Destroy the cursor on mouse out\r\nconst destroyCursor = () => {\r\n  cursor.classList.remove(\"custom-cursor--init\");\r\n  isCursorInited = false;\r\n};\r\n\r\n// Detect hover over elements and change cursor state\r\n// links.forEach((link) => {\r\n//   link.addEventListener(\"mouseover\", () => {\r\n//     cursor.classList.add(\"custom-cursor--link\");\r\n//   });\r\n\r\n//   link.addEventListener(\"mouseout\", () => {\r\n//     cursor.classList.remove(\"custom-cursor--link\");\r\n//   });\r\n// });\r\n\r\nlinks.forEach((link) => {\r\n  link.addEventListener(\"mouseover\", () => {\r\n    clearTimeout(cursor.leaveTimeout);\r\n    cursor.classList.remove(\"custom-cursor--out\");\r\n    cursor.classList.add(\"custom-cursor--link\");\r\n  });\r\n\r\n  link.addEventListener(\"mouseout\", () => {\r\n    // First: trigger the \"out\" animation\r\n    cursor.classList.remove(\"custom-cursor--link\");\r\n    cursor.classList.add(\"custom-cursor--out\");\r\n\r\n    // Optional: Remove .custom-cursor--out after animation completes\r\n    cursor.leaveTimeout = setTimeout(() => {\r\n      cursor.classList.remove(\"custom-cursor--out\");\r\n    }, 300); // match the transition time\r\n  });\r\n});\r\n\r\n\r\n// Update cursor position smoothly with lag effect\r\nconst updateCursorPosition = () => {\r\n  // Interpolate current position towards target position (for laggy effect)\r\n  currentX += (targetX - currentX) * cursorSpeed;\r\n  currentY += (targetY - currentY) * cursorSpeed;\r\n\r\n  // Update the large cursor position\r\n  cursor.style.left = `${currentX}px`;\r\n  cursor.style.top = `${currentY}px`;\r\n\r\n  // Update the small dot position\r\n  cursorDot.style.left = `${targetX}px`;\r\n  cursorDot.style.top = `${targetY}px`;\r\n\r\n  // Repeat this animation frame\r\n  requestAnimationFrame(updateCursorPosition);\r\n};\r\n\r\n// Mouse move event to update target position\r\ndocument.addEventListener(\"mousemove\", (e) => {\r\n  targetX = e.clientX;\r\n  targetY = e.clientY;\r\n\r\n  // Initialize cursor if not yet initialized\r\n  if (!isCursorInited) {\r\n    initCursor();\r\n  }\r\n});\r\n\r\n// Destroy cursor on mouse out\r\ndocument.addEventListener(\"mouseout\", destroyCursor);\r\n\r\n// Start the laggy cursor movement\r\nupdateCursorPosition();\r\n\r\n\r\n// const lottieDiv = document.querySelector(\".home-header_lottie-desktop\");\r\n\r\n// const parallaxSpeed = 0.02; // Adjust for more/less movement\r\n\r\n// const updateParallax = () => {\r\n//   if (!lottieDiv) return;\r\n\r\n//   const centerX = window.innerWidth / 2;\r\n//   const centerY = window.innerHeight / 2;\r\n\r\n//   const moveX = (targetX - centerX) * parallaxSpeed;\r\n//   const moveY = (targetY - centerY) * parallaxSpeed;\r\n\r\n//   gsap.to(lottieDiv, {\r\n//     x: moveX,\r\n//     y: moveY,\r\n//     duration: 0.6,\r\n//     ease: \"power3.out\",\r\n//   });\r\n\r\n//   requestAnimationFrame(updateParallax);\r\n// };\r\n\r\n// updateParallax();\r\n\r\n\r\n// // test\r\n\r\nconst lottieDiv = document.querySelector(\".home-header_lottie-desktop\");\r\nconst lottieSection = document.querySelector(\".lott\"); // wrap the Lottie in a section or container\r\n\r\nconst parallaxTiltIntensity = 10;\r\nconst lerpSpeed = 0.1;\r\n\r\nlet currentTiltX = 0;\r\nlet currentTiltY = 0;\r\nlet localX = 0;\r\nlet localY = 0;\r\nlet isInSection = false;\r\n\r\ndocument.addEventListener(\"mousemove\", (e) => {\r\n  const rect = lottieSection.getBoundingClientRect();\r\n  isInSection = (\r\n    e.clientX >= rect.left &&\r\n    e.clientX <= rect.right &&\r\n    e.clientY >= rect.top &&\r\n    e.clientY <= rect.bottom\r\n  );\r\n\r\n  if (isInSection) {\r\n    localX = e.clientX - rect.left;\r\n    localY = e.clientY - rect.top;\r\n  }\r\n});\r\n\r\n\r\nfunction updateLottie3DTilt() {\r\n  if (!lottieDiv) return;\r\n\r\n  if (isInSection) {\r\n    const rect = lottieSection.getBoundingClientRect();\r\n    const centerX = rect.width / 2;\r\n    const centerY = rect.height / 2;\r\n\r\n    const offsetX = localX - centerX;\r\n    const offsetY = localY - centerY;\r\n\r\n    const percentX = offsetX / centerX;\r\n    const percentY = offsetY / centerY;\r\n\r\n    const targetTiltY = percentX * parallaxTiltIntensity * -1;\r\n    const targetTiltX = percentY * parallaxTiltIntensity;\r\n\r\n    currentTiltX += (targetTiltX - currentTiltX) * lerpSpeed;\r\n    currentTiltY += (targetTiltY - currentTiltY) * lerpSpeed;\r\n  } else {\r\n    // Slowly return to 0 rotation when mouse leaves the section\r\n    currentTiltX += (0 - currentTiltX) * lerpSpeed;\r\n    currentTiltY += (0 - currentTiltY) * lerpSpeed;\r\n  }\r\n\r\n  gsap.set(lottieDiv, {\r\n    rotationX: currentTiltX,\r\n    rotationY: currentTiltY,\r\n    transformPerspective: 800,\r\n    transformOrigin: \"center center\",\r\n  });\r\n\r\n  requestAnimationFrame(updateLottie3DTilt);\r\n}\r\n\r\nupdateLottie3DTilt();\r\n"],"names":["$df8da4b5726af936$var$cursor","document","querySelector","$df8da4b5726af936$var$cursorDot","$df8da4b5726af936$var$links","querySelectorAll","$df8da4b5726af936$var$isCursorInited","$df8da4b5726af936$var$targetX","$df8da4b5726af936$var$targetY","$df8da4b5726af936$var$currentX","$df8da4b5726af936$var$currentY","$df8da4b5726af936$var$initCursor","classList","add","forEach","link","addEventListener","clearTimeout","leaveTimeout","remove","setTimeout","$df8da4b5726af936$var$updateCursorPosition","style","left","top","requestAnimationFrame","e","clientX","clientY","$df8da4b5726af936$var$lottieDiv","$df8da4b5726af936$var$lottieSection","$df8da4b5726af936$var$currentTiltX","$df8da4b5726af936$var$currentTiltY","$df8da4b5726af936$var$localX","$df8da4b5726af936$var$localY","$df8da4b5726af936$var$isInSection","rect","getBoundingClientRect","right","bottom","$df8da4b5726af936$var$updateLottie3DTilt","centerX","width","centerY","height","offsetX","offsetY","targetTiltX","targetTiltY","percentX","gsap","set","rotationX","rotationY","transformPerspective","transformOrigin"],"version":3,"file":"index.a691f1ed.js.map"}