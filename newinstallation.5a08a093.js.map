{"mappings":"ACCA,QAAQ,GAAG,CAAC,oBAGZ,EAAE,UAAU,KAAK,CAAC,WAIhB,SAAS,EAAqB,CAAS,CAAE,CAAQ,EACzC,EAAS,EAAE,CAAC,YACZ,EAAE,IAAM,GAAW,SAAS,GAE5B,EAAE,IAAM,GAAW,OAAO,EAElC,CATA,QAAQ,GAAG,CAAC,iBAYZ,EAAE,iBAAiB,EAAE,CAAC,SAAU,WAC5B,EAAqB,uBAAwB,EAAE,IAAI,EACvD,GAEA,EAAE,kBAAkB,EAAE,CAAC,SAAU,WAC7B,EAAqB,wBAAyB,EAAE,IAAI,EACxD,GAEA,EAAE,gBAAgB,EAAE,CAAC,SAAU,WAC3B,EAAqB,sBAAuB,EAAE,IAAI,EACtD,EACF,GAIA,SAAS,gBAAgB,CAAC,mBAAoB,WAE5C,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAG5B,SAAS,gBAAgB,CAAC,4BAA4B,OAAO,CAAC,AAAA,IAC5D,EAAK,gBAAgB,CAAC,QAAS,SAAU,CAAK,EACxC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,QAAQ,CAAC,MAAM,GAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OACtE,EAAM,cAAc,GAEpB,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAE5B,WAAW,KACT,OAAO,QAAQ,CAAC,IAAI,CAAG,IAAI,CAAC,IAAI,AAClC,EAAG,KAEP,EACF,EACF","sources":["<anon>","main.js"],"sourcesContent":["var $efd3ba4ec2608b1d$exports = {};\nconsole.log('script.js loaded');\n$(document).ready(function() {\n    console.log('Script loaded');\n    // Function to toggle sections based on checkbox state\n    function toggleServiceSection(sectionId, checkbox) {\n        if (checkbox.is(':checked')) $('#' + sectionId).slideDown(); // Slide down if checked\n        else $('#' + sectionId).slideUp(); // Slide up if unchecked\n    }\n    // Event listeners for the checkboxes\n    $('#installation').on('change', function() {\n        toggleServiceSection('installation-details', $(this));\n    });\n    $('#modernization').on('change', function() {\n        toggleServiceSection('modernization-details', $(this));\n    });\n    $('#maintenance').on('change', function() {\n        toggleServiceSection('maintenance-details', $(this));\n    });\n});\n// workds fine \ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    // Fade in when page loads\n    document.body.classList.add(\"loaded\");\n    // Find all links and apply fade-out before navigation\n    document.querySelectorAll(\"a:not([target='_blank'])\").forEach((link)=>{\n        link.addEventListener(\"click\", function(event) {\n            if (this.href.startsWith(window.location.origin) && !this.href.includes(\"#\")) {\n                event.preventDefault(); // Stop default navigation\n                document.body.classList.add(\"fade-out\"); // Start fade-out effect\n                setTimeout(()=>{\n                    window.location.href = this.href; // Navigate after fade-out\n                }, 500); // Match CSS transition time (0.5s)\n            }\n        });\n    });\n}); // protect\n // document.addEventListener(\"contextmenu\", (event) => event.preventDefault());\n // document.addEventListener(\"keydown\", (event) => {\n //   if (event.ctrlKey && (event.key === \"u\" || event.key === \"s\" || event.key === \"i\" || event.key === \"j\")) {\n //     event.preventDefault();\n //   }\n // });\n // document.addEventListener(\"keydown\", function (event) {\n //     if (\n //         (event.ctrlKey && event.shiftKey && event.key === \"I\") ||  // Ctrl + Shift + I\n //         (event.ctrlKey && event.shiftKey && event.key === \"J\") ||  // Ctrl + Shift + J\n //         (event.ctrlKey && event.key === \"U\") ||  // Ctrl + U (View Page Source)\n //         (event.key === \"F12\")  // F12 (Open DevTools)\n //     ) {\n //         event.preventDefault();\n //         alert(\"DevTools is disabled!\");\n //     }\n // });\n // setInterval(() => {\n //     if (window.outerWidth - window.innerWidth > 200 || window.outerHeight - window.innerHeight > 200) {\n //         alert(\"DevTools detected! Closing the page...\");\n //         window.location.href = \"about:blank\"; // Redirect to an empty page\n //     }\n // }, 1000);\n // (function detectDevTools() {\n //     const threshold = 160; // Minimum difference to detect DevTools open\n //     function checkDevTools() {\n //         if (window.outerWidth - window.innerWidth > threshold || \n //             window.outerHeight - window.innerHeight > threshold) {\n //             alert(\"DevTools detected! Closing the page...\");\n //             window.location.href = \"about:blank\"; // Redirect to an empty page\n //         }\n //     }\n //     // Run detection every second\n //     setInterval(checkDevTools, 1000);\n //     // Detect resize event (triggers when DevTools opens)\n //     window.addEventListener(\"resize\", checkDevTools);\n // })();\n // setInterval(() => {\n //     console.clear(); // Keeps clearing console output\n // }, 100);\n // // document.body.innerHTML = \"\";\n // // setTimeout(() => {\n // //     document.body.innerHTML = \"<h1>Secure Content</h1><p>This content is loaded dynamically.</p>\";\n // // }, 1000);\n // const obfuscatedCode = \"console.log('This code is hidden');\";\n // eval(obfuscatedCode);\n // (function () {\n //     let devToolsOpened = false;\n //     function detectDevTools() {\n //         const element = new Image();\n //         Object.defineProperty(element, \"id\", {\n //             get: function () {\n //                 devToolsOpened = true;\n //                 triggerProtection();\n //             }\n //         });\n //         console.log(\"%c\", element); // Will trigger when console is open\n //     }\n //     function detectDebugger() {\n //         const start = performance.now();\n //         debugger; // Causes a delay when DevTools is open\n //         const end = performance.now();\n //         if (end - start > 100) {\n //             devToolsOpened = true;\n //             triggerProtection();\n //         }\n //     }\n //     function triggerProtection() {\n //         if (devToolsOpened) {\n //             document.body.innerHTML = \"\";\n //             setTimeout(() => {\n //                 document.body.innerHTML = \"<h1>Secure Content</h1><p>Access Restricted.</p>\";\n //             }, 1000);\n //         }\n //     }\n //     function checkOnLoad() {\n //         setTimeout(() => {\n //             detectDevTools();\n //             detectDebugger();\n //         }, 500); // Delay check to ensure DevTools was already open\n //     }\n //     // Run checks on page load and continuously every second\n //     checkOnLoad();\n //     setInterval(() => {\n //         detectDevTools();\n //         detectDebugger();\n //     }, 1000);\n //     // Prevent right-click & common DevTools shortcuts\n //     document.addEventListener(\"contextmenu\", (e) => e.preventDefault());\n //     document.addEventListener(\"keydown\", (e) => {\n //         if (e.key === \"F12\" || (e.ctrlKey && e.shiftKey && e.key === \"I\") || (e.ctrlKey && e.key === \"u\")) {\n //             e.preventDefault();\n //         }\n //     });\n // })();\n\n\n//# sourceMappingURL=newinstallation.5a08a093.js.map\n","\r\nconsole.log('script.js loaded');\r\n\r\n\r\n$(document).ready(function() {\r\n  console.log('Script loaded');\r\n\r\n  // Function to toggle sections based on checkbox state\r\n  function toggleServiceSection(sectionId, checkbox) {\r\n      if (checkbox.is(':checked')) {\r\n          $('#' + sectionId).slideDown(); // Slide down if checked\r\n      } else {\r\n          $('#' + sectionId).slideUp();   // Slide up if unchecked\r\n      }\r\n  }\r\n\r\n  // Event listeners for the checkboxes\r\n  $('#installation').on('change', function() {\r\n      toggleServiceSection('installation-details', $(this));\r\n  });\r\n\r\n  $('#modernization').on('change', function() {\r\n      toggleServiceSection('modernization-details', $(this));\r\n  });\r\n\r\n  $('#maintenance').on('change', function() {\r\n      toggleServiceSection('maintenance-details', $(this));\r\n  });\r\n});\r\n\r\n\r\n// workds fine \r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  // Fade in when page loads\r\n  document.body.classList.add(\"loaded\");\r\n\r\n  // Find all links and apply fade-out before navigation\r\n  document.querySelectorAll(\"a:not([target='_blank'])\").forEach(link => {\r\n    link.addEventListener(\"click\", function (event) {\r\n      if (this.href.startsWith(window.location.origin) && !this.href.includes(\"#\")) {\r\n        event.preventDefault(); // Stop default navigation\r\n\r\n        document.body.classList.add(\"fade-out\"); // Start fade-out effect\r\n\r\n        setTimeout(() => {\r\n          window.location.href = this.href; // Navigate after fade-out\r\n        }, 500); // Match CSS transition time (0.5s)\r\n      }\r\n    });\r\n  });\r\n});\r\n\r\n// protect\r\n\r\n// document.addEventListener(\"contextmenu\", (event) => event.preventDefault());\r\n// document.addEventListener(\"keydown\", (event) => {\r\n//   if (event.ctrlKey && (event.key === \"u\" || event.key === \"s\" || event.key === \"i\" || event.key === \"j\")) {\r\n//     event.preventDefault();\r\n//   }\r\n// });\r\n\r\n// document.addEventListener(\"keydown\", function (event) {\r\n//     if (\r\n//         (event.ctrlKey && event.shiftKey && event.key === \"I\") ||  // Ctrl + Shift + I\r\n//         (event.ctrlKey && event.shiftKey && event.key === \"J\") ||  // Ctrl + Shift + J\r\n//         (event.ctrlKey && event.key === \"U\") ||  // Ctrl + U (View Page Source)\r\n//         (event.key === \"F12\")  // F12 (Open DevTools)\r\n//     ) {\r\n//         event.preventDefault();\r\n//         alert(\"DevTools is disabled!\");\r\n//     }\r\n// });\r\n\r\n// setInterval(() => {\r\n//     if (window.outerWidth - window.innerWidth > 200 || window.outerHeight - window.innerHeight > 200) {\r\n//         alert(\"DevTools detected! Closing the page...\");\r\n//         window.location.href = \"about:blank\"; // Redirect to an empty page\r\n//     }\r\n// }, 1000);\r\n\r\n\r\n// (function detectDevTools() {\r\n//     const threshold = 160; // Minimum difference to detect DevTools open\r\n\r\n//     function checkDevTools() {\r\n//         if (window.outerWidth - window.innerWidth > threshold || \r\n//             window.outerHeight - window.innerHeight > threshold) {\r\n//             alert(\"DevTools detected! Closing the page...\");\r\n//             window.location.href = \"about:blank\"; // Redirect to an empty page\r\n//         }\r\n//     }\r\n\r\n//     // Run detection every second\r\n//     setInterval(checkDevTools, 1000);\r\n\r\n//     // Detect resize event (triggers when DevTools opens)\r\n//     window.addEventListener(\"resize\", checkDevTools);\r\n// })();\r\n\r\n\r\n// setInterval(() => {\r\n//     console.clear(); // Keeps clearing console output\r\n// }, 100);\r\n\r\n// // document.body.innerHTML = \"\";\r\n// // setTimeout(() => {\r\n// //     document.body.innerHTML = \"<h1>Secure Content</h1><p>This content is loaded dynamically.</p>\";\r\n// // }, 1000);\r\n\r\n// const obfuscatedCode = \"console.log('This code is hidden');\";\r\n// eval(obfuscatedCode);\r\n\r\n// (function () {\r\n//     let devToolsOpened = false;\r\n\r\n//     function detectDevTools() {\r\n//         const element = new Image();\r\n//         Object.defineProperty(element, \"id\", {\r\n//             get: function () {\r\n//                 devToolsOpened = true;\r\n//                 triggerProtection();\r\n//             }\r\n//         });\r\n\r\n//         console.log(\"%c\", element); // Will trigger when console is open\r\n//     }\r\n\r\n//     function detectDebugger() {\r\n//         const start = performance.now();\r\n//         debugger; // Causes a delay when DevTools is open\r\n//         const end = performance.now();\r\n\r\n//         if (end - start > 100) {\r\n//             devToolsOpened = true;\r\n//             triggerProtection();\r\n//         }\r\n//     }\r\n\r\n//     function triggerProtection() {\r\n//         if (devToolsOpened) {\r\n//             document.body.innerHTML = \"\";\r\n//             setTimeout(() => {\r\n//                 document.body.innerHTML = \"<h1>Secure Content</h1><p>Access Restricted.</p>\";\r\n//             }, 1000);\r\n//         }\r\n//     }\r\n\r\n//     function checkOnLoad() {\r\n//         setTimeout(() => {\r\n//             detectDevTools();\r\n//             detectDebugger();\r\n//         }, 500); // Delay check to ensure DevTools was already open\r\n//     }\r\n\r\n//     // Run checks on page load and continuously every second\r\n//     checkOnLoad();\r\n//     setInterval(() => {\r\n//         detectDevTools();\r\n//         detectDebugger();\r\n//     }, 1000);\r\n\r\n//     // Prevent right-click & common DevTools shortcuts\r\n//     document.addEventListener(\"contextmenu\", (e) => e.preventDefault());\r\n//     document.addEventListener(\"keydown\", (e) => {\r\n//         if (e.key === \"F12\" || (e.ctrlKey && e.shiftKey && e.key === \"I\") || (e.ctrlKey && e.key === \"u\")) {\r\n//             e.preventDefault();\r\n//         }\r\n//     });\r\n// })();"],"names":["console","log","$","document","ready","toggleServiceSection","sectionId","checkbox","is","slideDown","slideUp","on","addEventListener","body","classList","add","querySelectorAll","forEach","link","event","href","startsWith","window","location","origin","includes","preventDefault","setTimeout"],"version":3,"file":"newinstallation.5a08a093.js.map"}